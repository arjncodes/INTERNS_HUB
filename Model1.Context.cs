//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace INTERNS_HUB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class INTERNS_HUBEntities : DbContext
    {
        public INTERNS_HUBEntities()
            : base("name=INTERNS_HUBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<UserLoginCredential> UserLoginCredentials { get; set; }
        public virtual DbSet<UserProfile> UserProfile { get; set; }
        public virtual DbSet<Skill> Skills { get; set; }
        public virtual DbSet<UserSkill> UserSkills { get; set; }
        public virtual DbSet<CompanyRegistration> CompanyRegistrations { get; set; }
        public virtual DbSet<Internship> Internships { get; set; }
        public virtual DbSet<CompanyApplication> CompanyApplication { get; set; }
    
        public virtual ObjectResult<Nullable<int>> sp_GetMaxId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_GetMaxId");
        }
    
        public virtual int sp_UserRegister(string email, string fullName, string loginPassword, Nullable<int> userId)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var loginPasswordParameter = loginPassword != null ?
                new ObjectParameter("LoginPassword", loginPassword) :
                new ObjectParameter("LoginPassword", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserRegister", emailParameter, fullNameParameter, loginPasswordParameter, userIdParameter);
        }
    
        public virtual int sp_UpdateProfile(Nullable<int> userId, Nullable<int> age, string gender, string place, string phone, string highestQualification, Nullable<System.DateTime> yearOfCompletion, string experiance, string resumeFile)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var highestQualificationParameter = highestQualification != null ?
                new ObjectParameter("HighestQualification", highestQualification) :
                new ObjectParameter("HighestQualification", typeof(string));
    
            var yearOfCompletionParameter = yearOfCompletion.HasValue ?
                new ObjectParameter("YearOfCompletion", yearOfCompletion) :
                new ObjectParameter("YearOfCompletion", typeof(System.DateTime));
    
            var experianceParameter = experiance != null ?
                new ObjectParameter("Experiance", experiance) :
                new ObjectParameter("Experiance", typeof(string));
    
            var resumeFileParameter = resumeFile != null ?
                new ObjectParameter("ResumeFile", resumeFile) :
                new ObjectParameter("ResumeFile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateProfile", userIdParameter, ageParameter, genderParameter, placeParameter, phoneParameter, highestQualificationParameter, yearOfCompletionParameter, experianceParameter, resumeFileParameter);
        }
    
        public virtual int sp_PostInternships(string title, string description, string location, string type, string skillsRequired, Nullable<System.DateTime> startDate, string duration, Nullable<decimal> stipend, Nullable<int> openings, Nullable<System.DateTime> deadline, string companyName, string contactEmail, Nullable<int> companyId)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var skillsRequiredParameter = skillsRequired != null ?
                new ObjectParameter("SkillsRequired", skillsRequired) :
                new ObjectParameter("SkillsRequired", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var durationParameter = duration != null ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(string));
    
            var stipendParameter = stipend.HasValue ?
                new ObjectParameter("Stipend", stipend) :
                new ObjectParameter("Stipend", typeof(decimal));
    
            var openingsParameter = openings.HasValue ?
                new ObjectParameter("Openings", openings) :
                new ObjectParameter("Openings", typeof(int));
    
            var deadlineParameter = deadline.HasValue ?
                new ObjectParameter("Deadline", deadline) :
                new ObjectParameter("Deadline", typeof(System.DateTime));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PostInternships", titleParameter, descriptionParameter, locationParameter, typeParameter, skillsRequiredParameter, startDateParameter, durationParameter, stipendParameter, openingsParameter, deadlineParameter, companyNameParameter, contactEmailParameter, companyIdParameter);
        }
    
        public virtual int sp_RegisterCompany(string cmpName, string cmpDesc, string cmpLocation, string industry, string website, string cmpEmail, string cmpPassword)
        {
            var cmpNameParameter = cmpName != null ?
                new ObjectParameter("CmpName", cmpName) :
                new ObjectParameter("CmpName", typeof(string));
    
            var cmpDescParameter = cmpDesc != null ?
                new ObjectParameter("CmpDesc", cmpDesc) :
                new ObjectParameter("CmpDesc", typeof(string));
    
            var cmpLocationParameter = cmpLocation != null ?
                new ObjectParameter("CmpLocation", cmpLocation) :
                new ObjectParameter("CmpLocation", typeof(string));
    
            var industryParameter = industry != null ?
                new ObjectParameter("Industry", industry) :
                new ObjectParameter("Industry", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var cmpEmailParameter = cmpEmail != null ?
                new ObjectParameter("CmpEmail", cmpEmail) :
                new ObjectParameter("CmpEmail", typeof(string));
    
            var cmpPasswordParameter = cmpPassword != null ?
                new ObjectParameter("CmpPassword", cmpPassword) :
                new ObjectParameter("CmpPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RegisterCompany", cmpNameParameter, cmpDescParameter, cmpLocationParameter, industryParameter, websiteParameter, cmpEmailParameter, cmpPasswordParameter);
        }
    
        public virtual ObjectResult<sp_GetInternshipsList_Result> sp_GetInternshipsList(Nullable<int> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetInternshipsList_Result>("sp_GetInternshipsList", companyIdParameter);
        }
    
        public virtual ObjectResult<sp_GetJobs_Result> sp_GetJobs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetJobs_Result>("sp_GetJobs");
        }
    
        public virtual int sp_InsertCompanyApplication(Nullable<int> userId, Nullable<int> companyId, Nullable<int> internshipId, Nullable<System.DateTime> appliedDate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var internshipIdParameter = internshipId.HasValue ?
                new ObjectParameter("InternshipId", internshipId) :
                new ObjectParameter("InternshipId", typeof(int));
    
            var appliedDateParameter = appliedDate.HasValue ?
                new ObjectParameter("AppliedDate", appliedDate) :
                new ObjectParameter("AppliedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertCompanyApplication", userIdParameter, companyIdParameter, internshipIdParameter, appliedDateParameter);
        }
    
        public virtual ObjectResult<sp_GetUserDetails_Result> sp_GetUserDetails(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetUserDetails_Result>("sp_GetUserDetails", userIdParameter);
        }
    
        public virtual ObjectResult<sp_GetCompanyApplications_Result> sp_GetCompanyApplications(Nullable<int> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCompanyApplications_Result>("sp_GetCompanyApplications", companyIdParameter);
        }
    
        public virtual ObjectResult<GetAppliedJobsForCompany_Result> GetAppliedJobsForCompany(Nullable<int> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAppliedJobsForCompany_Result>("GetAppliedJobsForCompany", companyIdParameter);
        }
    
        public virtual ObjectResult<sp_GetApplicants_Result> sp_GetApplicants(Nullable<int> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetApplicants_Result>("sp_GetApplicants", companyIdParameter);
        }
    }
}
